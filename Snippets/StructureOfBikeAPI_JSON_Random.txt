
​​​0: Object { id: "96", lat: "46.355340188965926", lon: "0", … }
id: "96"
​​​​
lat: "46.355340188965926"
​​​​
lon: "0"
​​​​
name: "Tržič - Deteljica"
​​​​
numberOfBikes: random number between 4-7
​​​​
numberOfElectricBikes: random number between 1-3
​​​​
numberOfFreeBikes: random number value between 4-7
​​​​
numberOfFreeLocks: random number value between 4-7
​​​​
numberOfLocks: "10"
​​​​
numberOfTotalFaulty: random number value between 0-2
​​​​
street: "Deteljica 2 3/4"
​​​​
timestamp: "2023-09-20T17:00:00.000588701+02:00" increment for 1 minute after ID96, ID97, ID98 values

​​​
1: Object { id: "97", lat: "46.363455322552454", lon: "0", … }
id: "97"
​​​​
lat: "46.363455322552454"
​​​​
lon: "0"
​​​​
name: "Tržič - Občina Tržič"
​​​​
numberOfBikes: random number value between 4-7
​​​​
numberOfElectricBikes: random number between 1-3
​​​​
numberOfFreeBikes: random number value between 4-7
​​​​
numberOfFreeLocks: random number value between 4-7
​​​​
numberOfLocks: "10"
​​​​
numberOfTotalFaulty: random number value between 0-2
​​​​
street: "Trg Svobode 18 3/3"
​​​​
timestamp: "2023-09-20T17:00:00.000588701+02:00" increment for 1 minute after ID96, ID97, ID98 values
​​​
2: Object { id: "98", lat: "46.36078990065185", lon: "0", … }
id: "98"
​​​​
lat: "46.36078990065185"
​​​​
lon: "0"
​​​​
name: "Tržič - BPT"
​​​​
numberOfBikes: random number value between 4-7
​​​​
numberOfElectricBikes: random number between 1-3
​​​​
numberOfFreeBikes: random number value between 4-7
​​​​
numberOfFreeLocks: random number value between 4-7
​​​​
numberOfLocks: "10"
​​​​
numberOfTotalFaulty: random number value between 0-2
​​​​
street: "Predilniška cesta 14 3/4"

timestamp: "2023-09-20T17:00:00.000588701+02:00" increment for 1 minute after ID96, ID97, ID98 values
​​​
3: Object { id: "96", lat: "46.355340188965926", lon: "0", … }
​​​
4: Object { id: "97", lat: "46.363455322552454", lon: "0", … }
​​​
5: Object { id: "98", lat: "46.36078990065185", lon: "0", … }




            # Generate predictive data for missing timestamps
            for id in ['96', '97', '98']:
                for timestamp in generate_missing_timestamps(start_date, end_date):
                    print(timestamp)
                    #if not any(entry['timestamp'] == timestamp and entry['id'] == id for entry in data):

                    for entry in data:
                        print("Entry timestamp:" + entry['timestamp'])
                        print("Entry timestamp-6:" + entry['timestamp'].startswith(timestamp[:-6]))
                        if not any(entry['id'] == id):  
                            #print("Gen timestamp" + timestamp)
                            #print("Entry timestamp" + entry['timestamp'])
                            predictive_data = generate_predictive_data(id, timestamp)
                            data.append(predictive_data)


if not any(
    entry['id'] == id and entry['timestamp'].startswith(timestamp[:-6])
    for entry in data
):
